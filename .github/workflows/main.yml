name: Terraform CI/CD
on:
pull_request:
paths: ['**/*.tf', '.github/workflows/**']
push:
branches: ['main']
workflow_dispatch:


jobs:
plan:
runs-on: ubuntu-latest
steps:
- uses: actions/checkout@v4
- name: Setup Terraform
uses: hashicorp/setup-terraform@v2
with: { terraform_version: '1.5.7' }
- name: Configure AWS creds
uses: aws-actions/configure-aws-credentials@v2
with:
aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
aws-region: ${{ secrets.AWS_REGION }}
- name: Terraform Init
run: terraform init -input=false -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="key=vpc/terraform.tfstate" -backend-config="region=${{ secrets.AWS_REGION }}" -backend-config="dynamodb_table=${{ secrets.TF_STATE_LOCK_TABLE }}"
- run: terraform fmt -check
- run: terraform validate
- run: terraform plan -out=tfplan -input=false
- name: Upload plan
uses: actions/upload-artifact@v4
with: { name: tfplan, path: tfplan }


apply:
needs: plan
if: github.ref == 'refs/heads/main'
runs-on: ubuntu-latest
environment: production
steps:
- uses: actions/checkout@v4
- name: Setup Terraform
uses: hashicorp/setup-terraform@v2
with: { terraform_version: '1.5.7' }
- name: Configure AWS creds
uses: aws-actions/configure-aws-credentials@v2
with:
aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
aws-region: ${{ secrets.AWS_REGION }}
- name: Download plan
uses: actions/download-artifact@v4
with: { name: tfplan }
- name: Terraform Init
run: terraform init -input=false -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="key=vpc/terraform.tfstate" -backend-config="region=${{ secrets.AWS_REGION }}" -backend-config="dynamodb_table=${{ secrets.TF_STATE_LOCK_TABLE }}"
- name: Terraform Apply
run: terraform apply -input=false -auto-approve tfplan